// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium --auto --filename ./crd-catalog/kubean-io/kubean/kubean.io/v1alpha1/localartifactsets.yaml
// kopium version: 0.16.1

use kube::CustomResource;
use schemars::JsonSchema;
use serde::{Serialize, Deserialize};

#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, JsonSchema)]
#[kube(group = "kubean.io", version = "v1alpha1", kind = "LocalArtifactSet", plural = "localartifactsets")]
#[kube(status = "LocalArtifactSetStatus")]
pub struct LocalArtifactSetSpec {
    /// Arch for x86_64  aarch64... , represent for the arch of this offline package
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub arch: Option<Vec<String>>,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub docker: Option<Vec<LocalArtifactSetDocker>>,
    /// Items cni containerd kubeadm kube etcd cilium calico
    pub items: Vec<LocalArtifactSetItems>,
    /// Kubespray , the tag of kubespray
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub kubespray: Option<String>,
}

#[derive(Serialize, Deserialize, Clone, Debug, JsonSchema)]
pub struct LocalArtifactSetDocker {
    pub os: String,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "versionRange")]
    pub version_range: Option<Vec<String>>,
}

#[derive(Serialize, Deserialize, Clone, Debug, JsonSchema)]
pub struct LocalArtifactSetItems {
    pub name: String,
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "versionRange")]
    pub version_range: Option<Vec<String>>,
}

